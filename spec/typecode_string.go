// Code generated by "stringer -type=TypeCode"; DO NOT EDIT.

package spec

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TC_Kind-0]
	_ = x[TC_Bit-1]
	_ = x[TC_Array-2]
	_ = x[TC_Prog-3]
	_ = x[TC_Ref-4]
	_ = x[TC_Sum-5]
	_ = x[TC_Product-6]
	_ = x[TC_List-7]
	_ = x[TC_Lazy-8]
	_ = x[TC_Lambda-9]
	_ = x[TC_Fractal-10]
	_ = x[TC_Port-11]
	_ = x[TC_Distinct-12]
	_ = x[TC_AnyProg-13]
	_ = x[TC_AnyType-14]
	_ = x[TC_AnyValue-15]
}

const _TypeCode_name = "TC_KindTC_BitTC_ArrayTC_ProgTC_RefTC_SumTC_ProductTC_ListTC_LazyTC_LambdaTC_FractalTC_PortTC_DistinctTC_AnyProgTC_AnyTypeTC_AnyValue"

var _TypeCode_index = [...]uint8{0, 7, 13, 21, 28, 34, 40, 50, 57, 64, 73, 83, 90, 101, 111, 121, 132}

func (i TypeCode) String() string {
	if i >= TypeCode(len(_TypeCode_index)-1) {
		return "TypeCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TypeCode_name[_TypeCode_index[i]:_TypeCode_index[i+1]]
}
